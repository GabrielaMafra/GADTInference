data T a where {T1 :: (a ~ Int) => a -> T a; T2 :: a -> T a; T3 :: (a ~ Bool) => a -> T a}
\x -> case x of {(T1 n,_) -> n; (T2 x,y) -> if (x===y) then x else y; (T3 b,_) -> b}
---
data T a where {T1 :: a -> T a}
\x -> case x of { T1 n -> True }
---
data T a where {T1 :: a -> T a}
\x -> case x of {(T1 n,False,a,s,d,f,g,h) -> True }
---
data T a where {T1 :: a -> T a}
\x -> case x of {(T1 n,T1 h) -> True }
---
data T a where {T1 :: (a ~ Int) => a -> T a; T2 :: (a ~ Bool) => a -> T a}
\x -> case x of {(T1 n,T2 b) -> (n > 0);(T2 b,T1 n) -> b}
---
data T a where {T1 :: (Bool ~ a) => Int -> T a}
\x -> case x of { T1 n -> n > 0 }
---
data T a where {T1 :: (a ~ Bool) => Int -> T a; T2 :: T a}
\x -> case x of {T1 n -> (n > 0);T2 -> True}
---
data T a where {T1 :: (a ~ Bool) => Int -> T a; T2 :: a -> T a}
\x -> case x of {T1 n -> (n > 0);T2 b -> True}
